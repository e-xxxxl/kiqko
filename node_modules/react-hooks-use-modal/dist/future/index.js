"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/future/index.tsx
var future_exports = {};
__export(future_exports, {
  ModalProvider: () => ModalProvider,
  useModal: () => useModal
});
module.exports = __toCommonJS(future_exports);
var import_react4 = __toESM(require("react"));

// src/future/components/DefaultComponents.tsx
var import_react = __toESM(require("react"));
var ModalContentDefault = ({
  title,
  description,
  children,
  contentProps
}) => {
  return /* @__PURE__ */ import_react.default.createElement("div", { ...contentProps }, title && /* @__PURE__ */ import_react.default.createElement("h2", null, title), description && /* @__PURE__ */ import_react.default.createElement("p", null, description), children);
};

// src/future/hooks/useModalConfig.ts
var import_react2 = require("react");
var ModalConfigContext = (0, import_react2.createContext)({});
var useModalConfig = () => {
  return (0, import_react2.useContext)(ModalConfigContext);
};

// esbuild-css-modules-plugin-namespace:/tmp/tmp-1777-dVX1lZSFXDl3/react-hooks-use-modal/src/future/index.module.css.js
var digest = "ac70d3e9cee579592f7bf8748dc078adc7991e27863551fd06b45d39f6cf7325";
var css = `._dialog_jfhr7_1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;

  /* reset */
  width: 100%;
  height: 100%;
  max-width: none;
  max-height: none;
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  inset-block-start: 0;
  inset-block-end: 0;
  inset-inline-start: 0;
  inset-inline-end: 0;
}

._dialog_jfhr7_1[open] {
  animation: _scale_jfhr7_1 0.2s cubic-bezier(0.5, 1, 0.89, 1) forwards;
}

._dialog_jfhr7_1:not([open]) {
  display: flex;
  opacity: 0;
  visibility: hidden;
  transform: scale(0.9);
  transition: opacity 0.15s cubic-bezier(0.5, 1, 0.89, 1),
    visibility 0.15s cubic-bezier(0.5, 1, 0.89, 1),
    transform 0.15s cubic-bezier(0.5, 1, 0.89, 1);
}

._dialog_jfhr7_1::backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  animation: _fade_jfhr7_1 0.15s cubic-bezier(0.5, 1, 0.89, 1) forwards;
}

@keyframes _scale_jfhr7_1 {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes _fade_jfhr7_1 {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
`;
(function() {
  if (typeof document === "undefined") {
    return;
  }
  if (!document.getElementById(digest)) {
    var el = document.createElement("style");
    el.id = digest;
    el.textContent = css;
    document.head.appendChild(el);
  }
})();
var index_module_css_default = { "dialog": "_dialog_jfhr7_1", "scale": "_scale_jfhr7_1", "fade": "_fade_jfhr7_1" };

// src/future/components/ModalProvider.tsx
var import_react3 = __toESM(require("react"));
var ModalProvider = ({
  children,
  ...props
}) => {
  return /* @__PURE__ */ import_react3.default.createElement(ModalConfigContext.Provider, { value: props }, children);
};

// src/future/index.tsx
var useModal = (options) => {
  const modalConfig = useModalConfig();
  const initialValue = options?.initialValue ?? modalConfig.initialValue ?? false;
  const closeOnOverlayClick = options?.closeOnOverlayClick ?? modalConfig.closeOnOverlayClick ?? true;
  const ModalContent = options?.components?.ModalContent ?? modalConfig.components?.ModalContent ?? ModalContentDefault;
  const ref = (0, import_react4.useRef)(null);
  const subscribe = (0, import_react4.useCallback)((callback) => {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === "open") {
          callback();
        }
      });
    });
    ref.current && observer.observe(ref.current, {
      attributes: true
    });
    return () => {
      observer.disconnect();
    };
  }, []);
  const isOpen = (0, import_react4.useSyncExternalStore)(
    subscribe,
    () => {
      return ref.current?.open ?? false;
    },
    () => false
  );
  const open = (0, import_react4.useCallback)(
    (options2 = {}) => {
      options2.isModal = options2.isModal ?? true;
      if (options2.isModal) {
        ref.current?.showModal();
      } else {
        ref.current?.show();
      }
    },
    []
  );
  const close = (0, import_react4.useCallback)(() => {
    ref.current?.close();
  }, []);
  const handleOverlayClick = (0, import_react4.useCallback)(
    (e) => {
      if (closeOnOverlayClick && e.target === e.currentTarget) {
        close();
      }
    },
    [closeOnOverlayClick, close]
  );
  const justMounted = (0, import_react4.useRef)(true);
  (0, import_react4.useEffect)(() => {
    if (justMounted.current) {
      if (initialValue === true) {
        open();
      }
      justMounted.current = false;
    }
  }, [initialValue, open]);
  const ModalWrapper = (0, import_react4.useCallback)(
    ({ dialogProps, ...props }) => {
      return /* @__PURE__ */ import_react4.default.createElement(
        "dialog",
        {
          ref,
          className: [index_module_css_default.dialog, dialogProps?.className].filter(Boolean).join(" "),
          onClick: (e) => {
            dialogProps?.onClick?.(e);
            handleOverlayClick(e);
          },
          ...dialogProps
        },
        /* @__PURE__ */ import_react4.default.createElement(ModalContent, { ...props })
      );
    },
    [handleOverlayClick, ModalContent]
  );
  return [ModalWrapper, open, close, isOpen];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ModalProvider,
  useModal
});
